name: "Subtree action"
description: "Execute the git subtree action in a protected environment"

inputs:
  git_name:
    description: "Git User Name"
    required: false
    default: GitHub Actions
  git_email:
    description: "Git User Email"
    required: false
    default: actions@github.com
  repo:
    description: "Repository URL (only https path supported)"
    required: true
  position:
    description: "branch name, commit sha"
    required: false
    default: "main"
  prefix:
    description: "Prefix"
    required: true
  github_pat:
    description: "GitHub Personal Access Token"
    required: true
  force:
    description: "Force push"
    required: false
    default: "false"

runs:
  using: "composite"

  steps:
    - name: Setup git for subtree
      shell: bash
      run: |
        # Fix dubious ownership
        git config --global --add safe.directory /github/workspace

        # Set git email and name
        git config --global user.email "${{ inputs.git_email }}"
        git config --global user.name "${{ inputs.git_name }}"

        # Make sure there are no prompts for git commands
        cp .git/config .git/config-original
        git config --global url."https://api:${{ inputs.github_pat }}@github.com/".insteadOf "https://github.com/"
        git config --unset http."https://github.com/".extraheader

    # - name: Fetch latest changes and reset local branch
    #   shell: bash
    #   run: |
    #     git fetch origin
    #     git reset --hard origin/main

    - name: Push subtree with force
      shell: bash
      run: |
        # Generate sha256 of the downstream repo name
        SPLIT_DIR=$(echo -n "${{ inputs.repo }}" | sha256sum)
        SPLIT_DIR="${SPLIT_DIR::-3}"

        # Get subtree repository into split directory
        git init --bare "${SPLIT_DIR}"

        # Create the subtree split branch
        git subtree split --prefix="${{ inputs.prefix }}" -b split

        # Check for force push to remote
        if [ "${{ inputs.force }}" == "true" ]; then
          PUSH_ARGS="-f"
        fi

        # Resolve downstream branch.
        # If not set then use the event github ref, if the ref isn't set default to master.
        if [ "${{ inputs.branch }}" == "" ]; then
          if [ -z "$GITHUB_REF" ] || [ "$GITHUB_REF" == "" ]; then
            INPUT_BRANCH="main"
          else
            INPUT_BRANCH="$GITHUB_REF"
          fi
        fi

        # Push to the subtree directory
        git push "${PUSH_ARGS}" "${{ inputs.prefix }}" split:"$INPUT_BRANCH"

        cd "${SPLIT_DIR}"
        git remote add origin subtree:"${{ inputs.repo }}"
        git push -u "${PUSH_ARGS}" origin "$INPUT_BRANCH"

        # # Tag the subtree repository
        # if [ "$INPUT_TAG" != "false" ]; then
        #   if [ "$INPUT_TAG" == "true" ]; then
        #     INPUT_TAG="${GITHUB_REF}"
        #   fi

        #   git tag $(basename "${INPUT_TAG}")
        #   git push --tags
        # fi