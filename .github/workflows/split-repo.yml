name: Split and Push Changes

on:
  push:
    branches:
      - main

jobs:
  split_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get modified modules
        id: get-modules
        run: |
          # Your logic to get modified modules and save them to a file or environment variable
          # This example assumes you output a JSON list of modules
          modified_modules=$(git diff --name-only HEAD^ HEAD | grep 'modules/' | sed 's/modules\///' | cut -d '/' -f1 | sort | uniq)
          echo "::set-output name=modules::${modified_modules}"
      
      - name: Split and push changes
        env:
          GIT_SCALAR_VERSION: "1.0"  # Specify your Git Scalar version if needed
        run: |
          modified_modules="${{ steps.get-modules.outputs.modules }}"
          if [ -z "$modified_modules" ]; then
            echo "No modules to process."
            exit 0
          fi

          for module in $modified_modules; do
            echo "Processing module: $module"

            # Define the repository URL and directory for each module
            REPO_URL="https://github.com/christian-calabrese/terraform-aws-$module.git"
            MODULE_PATH="modules/$module"

            # Setup Git Scalar
            git scalar init --repository "$REPO_URL"

            # Create a new directory for the module
            mkdir -p "$module-repo"
            cd "$module-repo"

            # Clone the single-repo
            git clone "$REPO_URL" .

            # Add the changes from the module
            cp -r "../$MODULE_PATH/" .

            # Commit and push the changes
            git add .
            git commit -m "Update module $module"
            git push origin main

            # Clean up
            cd ..
            rm -rf "$module-repo"
          done